services:
  openldap:
    # In this setup, Docker Compose will build an image using the Dockerfile
    # from the specified context and use it to start the container.
    # This approach is useful when you need to create a custom image from a
    # Dockerfile before running the container.
    # the 'image' tag below: This sets the name and optionally the tag of the
    # image that will be created. For example, custom-openldap:latest creates
    # an image named custom-openldap with the tag latest.
    build:
      context: .
      dockerfile: Dockerfile # Optional, if the Dockerfile has a custom name, specify it here
    image: custom-openldap:latest
    container_name: ${LDAP_HOST_NAME}
    env_file:
      - ./.env
    ports:
      - "${LDAP_PORT:-389}:389"
      - "${LDAPS_PORT:-636}:636"
    command: --copy-service
    volumes:
      - ldap_data:/var/lib/ldap
      - ldap_config:/etc/ldap/slapd.d
    healthcheck:
      test: [
        "CMD",
        "ldapsearch",
        "-x",
        "-b", "${LDAP_BASE_DN}",
        "-D", "cn=admin,${LDAP_BASE_DN}",
        "-w", "${LDAP_ADMIN_PASSWORD}"
      ]
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-10s}
      retries: ${HEALTHCHECK_RETRIES:-5}
    networks:
      - keycloak_network

  phpadmin:
    image: osixia/phpldapadmin:latest
    container_name: ${PHP_ADMIN_HOST_NAME}
    env_file:
      - ./.env
    ports:
      - "${PHP_LDAPADMIN_PORT:-6443}:80"
    depends_on:
      openldap:
        condition: service_healthy
    healthcheck:
      test: [
        "CMD",
        "php",
        "-r",
        "if (@file_get_contents('http://localhost:80')) exit(0); else exit(1);"
      ]
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-10s}
      retries: ${HEALTHCHECK_RETRIES:-5}
    networks:
      - keycloak_network

volumes:
  ldap_data:
  ldap_config:

networks:
  keycloak_network:
    driver: bridge  # Creates a new bridge network for this service
    name: keycloak_network  # This will match the name in the main compose file