{
	"info": {
		"_postman_id": "10ebb47a-2700-43ba-b4d9-2129bf9354b2",
		"name": "Keycloak",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39468559"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login - Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"ADMIN_ACCESS_TOKEN\", jsonData.access_token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{ADMIN_CLIENT_ID}}"
								},
								{
									"key": "username",
									"value": "admin"
								},
								{
									"key": "password",
									"value": "admin"
								},
								{
									"key": "grant_type",
									"value": "password"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/realms/{{ADMIN_REALM_NAME}}/protocol/openid-connect/token",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"realms",
								"{{ADMIN_REALM_NAME}}",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login - User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"refresh_token\", jsonData.refresh_token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{CLIENT_ID}}"
								},
								{
									"key": "username",
									"value": "kzuser1"
								},
								{
									"key": "password",
									"value": "password1"
								},
								{
									"key": "grant_type",
									"value": "password"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/realms/{{USER_REALM_NAME}}/protocol/openid-connect/token",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"realms",
								"{{USER_REALM_NAME}}",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Logout",
			"item": [
				{
					"name": "1 - Login - User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"const currentFolder = FolderNames.logoutFolder;",
									"FolderVariables.setVariable(pm, currentFolder, \"REFRESH_TOKEN\", jsonData.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{CLIENT_ID}}"
								},
								{
									"key": "username",
									"value": "kzuser1"
								},
								{
									"key": "password",
									"value": "password1"
								},
								{
									"key": "grant_type",
									"value": "password"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/realms/{{USER_REALM_NAME}}/protocol/openid-connect/token",
							"host": ["{{BASE_URL}}"],
							"path": ["realms", "{{USER_REALM_NAME}}", "protocol", "openid-connect", "token"]
						}
					},
					"response": []
				},
				{
					"name": "2 - Logout - User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const currentFolder = FolderNames.logoutFolder;",
									"const refreshToken = FolderVariables.getVariable(pm, currentFolder, \"REFRESH_TOKEN\");",
									"pm.environment.set(\"REFRESH_TOKEN\", refreshToken);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.unset(\"REFRESH_TOKEN\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{CLIENT_ID}}"
								},
								{
									"key": "refresh_token",
									"value": "{{REFRESH_TOKEN}}"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/realms/{{USER_REALM_NAME}}/protocol/openid-connect/logout",
							"host": ["{{BASE_URL}}"],
							"path": ["realms", "{{USER_REALM_NAME}}", "protocol", "openid-connect", "logout"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get User Info",
			"item": [
				{
					"name": "1 - Login - Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"ADMIN_ACCESS_TOKEN\", jsonData.access_token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{ADMIN_CLIENT_ID}}"
								},
								{
									"key": "username",
									"value": "admin"
								},
								{
									"key": "password",
									"value": "admin"
								},
								{
									"key": "grant_type",
									"value": "password"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/realms/{{ADMIN_REALM_NAME}}/protocol/openid-connect/token",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"realms",
								"{{ADMIN_REALM_NAME}}",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 - Get User - Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"USER_ID\", jsonData[0].id);\r",
									"pm.environment.set(\"USER_NAME\", jsonData[0].username);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ADMIN_ACCESS_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{CLIENT_ID}}"
								},
								{
									"key": "username",
									"value": "kzuser1"
								},
								{
									"key": "password",
									"value": "password1"
								},
								{
									"key": "grant_type",
									"value": "password"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/admin/realms/{{USER_REALM_NAME}}/users?username=user3",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"admin",
								"realms",
								"{{USER_REALM_NAME}}",
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "user3"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Refresh Token",
			"item": [
				{
					"name": "1 - Login - User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"refresh_token\", jsonData.refresh_token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{CLIENT_ID}}"
								},
								{
									"key": "username",
									"value": "kzuser1"
								},
								{
									"key": "password",
									"value": "password1"
								},
								{
									"key": "grant_type",
									"value": "password"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/realms/{{USER_REALM_NAME}}/protocol/openid-connect/token",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"realms",
								"{{USER_REALM_NAME}}",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 - Refresh Token - User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.environment.set(\"refresh_token\", jsonData.refresh_token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{CLIENT_ID}}"
								},
								{
									"key": "refresh_token",
									"value": "{{refresh_token}}"
								},
								{
									"key": "grant_type",
									"value": "refresh_token"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/realms/{{USER_REALM_NAME}}/protocol/openid-connect/token",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"realms",
								"{{USER_REALM_NAME}}",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update Client Props",
			"item": [
				{
					"name": "1 - Login - Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const currentFolder = FolderNames.updateClientPropsFolder;\r",
									"FolderVariables.setVariable(pm, currentFolder, \"ADMIN_ACCESS_TOKEN\", jsonData.access_token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{ADMIN_CLIENT_ID}}"
								},
								{
									"key": "username",
									"value": "admin"
								},
								{
									"key": "password",
									"value": "admin"
								},
								{
									"key": "grant_type",
									"value": "password"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/realms/{{ADMIN_REALM_NAME}}/protocol/openid-connect/token",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"realms",
								"{{ADMIN_REALM_NAME}}",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 - Client Info - Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"const currentFolder = FolderNames.updateClientPropsFolder;\r",
									"\r",
									"FolderVariables.setVariable(pm, currentFolder, \"CLIENT_UUID\", jsonData[0].id);\r",
									"\r",
									"\r",
									"const clientUUID = FolderVariables.getVariable(pm, currentFolder, \"CLIENT_UUID\");\r",
									"console.log(`CLIENT_UUID for ${currentFolder} is:`, clientUUID);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const currentFolder = FolderNames.updateClientPropsFolder;\r",
									"const accessToken = FolderVariables.getVariable(pm, currentFolder, \"ADMIN_ACCESS_TOKEN\");\r",
									"pm.environment.set(\"ADMIN_ACCESS_TOKEN\", accessToken);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ADMIN_ACCESS_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/admin/realms/{{USER_REALM_NAME}}/clients?clientId={{CLIENT_ID}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"admin",
								"realms",
								"{{USER_REALM_NAME}}",
								"clients"
							],
							"query": [
								{
									"key": "clientId",
									"value": "{{CLIENT_ID}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3 - Update Client - Admin",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const currentFolder = FolderNames.updateClientPropsFolder;\r",
									"const clientUUID = FolderVariables.getVariable(pm, currentFolder, \"CLIENT_UUID\");\r",
									"pm.environment.set(\"CLIENT_UUID\", clientUUID);\r",
									"\r",
									"const accessToken = FolderVariables.getVariable(pm, currentFolder, \"ADMIN_ACCESS_TOKEN\");\r",
									"pm.environment.set(\"ADMIN_ACCESS_TOKEN\", accessToken);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.unset(\"CLIENT_UUID\");\r",
									"pm.environment.unset(\"ADMIN_ACCESS_TOKEN\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ADMIN_ACCESS_TOKEN}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"publicClient\": true,\r\n  \"serviceAccountsEnabled\": false,\r\n  \"standardFlowEnabled\": false,\r\n  \"directAccessGrantsEnabled\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/admin/realms/{{USER_REALM_NAME}}/clients/{{CLIENT_UUID}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"admin",
								"realms",
								"{{USER_REALM_NAME}}",
								"clients",
								"{{CLIENT_UUID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete User",
			"item": [
				{
					"name": "1 - Login - Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const currentFolder = FolderNames.deleteUserFolder;\r",
									"FolderVariables.setVariable(pm, currentFolder, \"ADMIN_ACCESS_TOKEN\", jsonData.access_token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{ADMIN_CLIENT_ID}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/realms/{{ADMIN_REALM_NAME}}/protocol/openid-connect/token",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"realms",
								"{{ADMIN_REALM_NAME}}",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 - Get User (Name)- Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.unset(\"ADMIN_ACCESS_TOKEN\");\r",
									"\r",
									"const username = pm.request.url.query.get(\"username\");\r",
									"const user = Utilities.getUserIdByCriteria(pm, username, \"username\");\r",
									"\r",
									"const currentFolder = FolderNames.deleteUserFolder;\r",
									"\r",
									"FolderVariables.setVariable(pm, currentFolder, \"USER_ID\", user.userId);\r",
									"\r",
									"const userId = FolderVariables.getVariable(pm, currentFolder, \"USER_ID\");\r",
									"console.log(`USER_ID for ${currentFolder} is:`, userId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const currentFolder = FolderNames.deleteUserFolder;\r",
									"const accessToken = FolderVariables.getVariable(pm, currentFolder, \"ADMIN_ACCESS_TOKEN\");\r",
									"pm.environment.set(\"ADMIN_ACCESS_TOKEN\", accessToken);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ADMIN_ACCESS_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/admin/realms/{{USER_REALM_NAME}}/users?username=user8",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"admin",
								"realms",
								"{{USER_REALM_NAME}}",
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "user8"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3 - Delete User - Admin",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const currentFolder = FolderNames.deleteUserFolder;\r",
									"const userId = FolderVariables.getVariable(pm, currentFolder, \"USER_ID\");\r",
									"pm.environment.set(\"USER_ID\", userId);\r",
									"\r",
									"const accessToken = FolderVariables.getVariable(pm, currentFolder, \"ADMIN_ACCESS_TOKEN\");\r",
									"pm.environment.set(\"ADMIN_ACCESS_TOKEN\", accessToken);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.unset(\"USER_ID\");\r",
									"pm.environment.unset(\"ADMIN_ACCESS_TOKEN\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{ADMIN_ACCESS_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/admin/realms/{{USER_REALM_NAME}}/users/{{USER_ID}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"admin",
								"realms",
								"{{USER_REALM_NAME}}",
								"users",
								"{{USER_ID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reset/Forgot Password via Email",
			"item": [
				{
					"name": "1 - Login - Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const currentFolder = FolderNames.forgotPasswordFolder;\r",
									"FolderVariables.setVariable(pm, currentFolder, \"ADMIN_ACCESS_TOKEN\", jsonData.access_token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{ADMIN_CLIENT_ID}}",
									"type": "text"
								},
								{
									"key": "username",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/realms/{{ADMIN_REALM_NAME}}/protocol/openid-connect/token",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"realms",
								"{{ADMIN_REALM_NAME}}",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 - Get User (Email)- Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.unset(\"ADMIN_ACCESS_TOKEN\");\r",
									"\r",
									"const email = pm.request.url.query.get(\"email\");\r",
									"const user = Utilities.getUserIdByCriteria(pm, email, \"email\");\r",
									"\r",
									"const currentFolder = FolderNames.forgotPasswordFolder;\r",
									"\r",
									"FolderVariables.setVariable(pm, currentFolder, \"USER_ID\", user.userId);\r",
									"\r",
									"const userId = FolderVariables.getVariable(pm, currentFolder, \"USER_ID\");\r",
									"console.log(`USER_ID for ${currentFolder} is:`, userId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const currentFolder = FolderNames.forgotPasswordFolder;\r",
									"const accessToken = FolderVariables.getVariable(pm, currentFolder, \"ADMIN_ACCESS_TOKEN\");\r",
									"pm.environment.set(\"ADMIN_ACCESS_TOKEN\", accessToken);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ADMIN_ACCESS_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/admin/realms/{{USER_REALM_NAME}}/users?email=kzuser1@example.com",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"admin",
								"realms",
								"{{USER_REALM_NAME}}",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "kzuser1@example.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3 - Update Password - Trigger Email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const currentFolder = FolderNames.forgotPasswordFolder;\r",
									"const userId = FolderVariables.getVariable(pm, currentFolder, \"USER_ID\");\r",
									"pm.environment.set(\"USER_ID\", userId);\r",
									"\r",
									"const accessToken = FolderVariables.getVariable(pm, currentFolder, \"ADMIN_ACCESS_TOKEN\");\r",
									"pm.environment.set(\"ADMIN_ACCESS_TOKEN\", accessToken);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.unset(\"USER_ID\");\r",
									"pm.environment.unset(\"ADMIN_ACCESS_TOKEN\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ADMIN_ACCESS_TOKEN}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"UPDATE_PASSWORD\"]\r\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/admin/realms/{{USER_REALM_NAME}}/users/{{USER_ID}}/execute-actions-email",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"admin",
								"realms",
								"{{USER_REALM_NAME}}",
								"users",
								"{{USER_ID}}",
								"execute-actions-email"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Reset Password Directly",
			"item": [
				{
					"name": "1 - Login - Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"const currentFolder = FolderNames.resetPasswordFolder;\r",
									"FolderVariables.setVariable(pm, currentFolder, \"ADMIN_ACCESS_TOKEN\", jsonData.access_token);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{ADMIN_CLIENT_ID}}"
								},
								{
									"key": "username",
									"value": "admin"
								},
								{
									"key": "password",
									"value": "admin"
								},
								{
									"key": "grant_type",
									"value": "password"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/realms/{{ADMIN_REALM_NAME}}/protocol/openid-connect/token",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"realms",
								"{{ADMIN_REALM_NAME}}",
								"protocol",
								"openid-connect",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 - Get User (Email)- Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.unset(\"ADMIN_ACCESS_TOKEN\");\r",
									"\r",
									"const email = pm.request.url.query.get(\"email\");\r",
									"const user = Utilities.getUserIdByCriteria(pm, email, \"email\");\r",
									"\r",
									"const currentFolder = FolderNames.resetPasswordFolder;\r",
									"\r",
									"FolderVariables.setVariable(pm, currentFolder, \"USER_ID\", user.userId);\r",
									"FolderVariables.setVariable(pm, currentFolder, \"USER_NAME\", user.username);\r",
									"\r",
									"const userId = FolderVariables.getVariable(pm, currentFolder, \"USER_ID\");\r",
									"console.log(`USER_ID for ${currentFolder} is:`, userId);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const currentFolder = FolderNames.resetPasswordFolder;\r",
									"const accessToken = FolderVariables.getVariable(pm, currentFolder, \"ADMIN_ACCESS_TOKEN\");\r",
									"pm.environment.set(\"ADMIN_ACCESS_TOKEN\", accessToken);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ADMIN_ACCESS_TOKEN}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/admin/realms/{{USER_REALM_NAME}}/users?email=kzuser1@example.com",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"admin",
								"realms",
								"{{USER_REALM_NAME}}",
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "kzuser1@example.com"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2 - Reset Password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const currentFolder = FolderNames.resetPasswordFolder;\r",
									"const userId = FolderVariables.getVariable(pm, currentFolder, \"USER_ID\");\r",
									"pm.environment.set(\"USER_ID\", userId);\r",
									"\r",
									"const username = FolderVariables.getVariable(pm, currentFolder, \"USER_NAME\");\r",
									"pm.environment.set(\"USER_ID\", username);\r",
									"\r",
									"const accessToken = FolderVariables.getVariable(pm, currentFolder, \"ADMIN_ACCESS_TOKEN\");\r",
									"pm.environment.set(\"ADMIN_ACCESS_TOKEN\", accessToken);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.unset(\"USER_ID\");\r",
									"pm.environment.unset(\"USER_NAME\");\r",
									"pm.environment.unset(\"ADMIN_ACCESS_TOKEN\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{ADMIN_ACCESS_TOKEN}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"type\": \"password\",\r\n  \"value\": \"password1\",\r\n  \"temporary\": false\r\n}\r\n"
						},
						"url": {
							"raw": "{{BASE_URL}}/admin/realms/{{USER_REALM_NAME}}/users/{{USER_ID}}/reset-password",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"admin",
								"realms",
								"{{USER_REALM_NAME}}",
								"users",
								"{{USER_ID}}",
								"reset-password"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// Collection-level variable manager\r",
					"FolderNames = {\r",
					"    logoutFolder: \"logoutFolder\",\r",
					"    deleteUserFolder: \"deleteUserFolder\",\r",
					"    resetPasswordFolder: \"resetPasswordFolder\",\r",
					"    forgotPasswordFolder: \"forgotPasswordFolder\",\r",
					"    updateClientPropsFolder: \"updateClientPropsFolder\",\r",
					"};\r",
					"\r",
					"FolderVariables = {};\r",
					"FolderVariables.setVariable = (pmInstance, folder, name, value) => {\r",
					"    // Get or create the folder-specific variable object\r",
					"    let folderData = pmInstance.collectionVariables.get(\"FolderData\") || \"{}\";\r",
					"    folderData = JSON.parse(folderData);\r",
					"\r",
					"    // Set variable within the specific folder's object\r",
					"    if (!folderData[folder]) folderData[folder] = {};\r",
					"    folderData[folder][name] = value;\r",
					"\r",
					"    pmInstance.collectionVariables.set(\"FolderData\", JSON.stringify(folderData));\r",
					"};\r",
					"FolderVariables.getVariable = (pmInstance, folder, name) => {\r",
					"    let folderData = pmInstance.collectionVariables.get(\"FolderData\") || \"{}\";\r",
					"    folderData = JSON.parse(folderData);\r",
					"\r",
					"    return folderData[folder] ? folderData[folder][name] : null;\r",
					"};\r",
					"FolderVariables.clearFolderVariables = (pmInstance, folder) => {\r",
					"    let folderData = pmInstance.collectionVariables.get(\"FolderData\") || \"{}\";\r",
					"    folderData = JSON.parse(folderData);\r",
					"\r",
					"    delete folderData[folder];\r",
					"    pmInstance.collectionVariables.set(\"FolderData\", JSON.stringify(folderData));\r",
					"};"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// Object.prototype.getUserIdByCriteria = (value, searchBy = 'username') => {...}\r",
					"// pm.getUserIdByCriteria('username', 'username');\r",
					"Utilities = {};\r",
					"Utilities.getUserIdByCriteria = (pmInstance, value, searchBy = 'username') => {\r",
					"    const users = pmInstance.response.json();\r",
					"\r",
					"    // Check if we're searching by email or username\r",
					"    let exactUser;\r",
					"    if (searchBy === 'email') {\r",
					"        exactUser = users.filter(user => user.email === value);\r",
					"    } else {\r",
					"        exactUser = users.filter(user => user.username === value);\r",
					"    }\r",
					"\r",
					"    if (exactUser.length === 1) {\r",
					"        const user = {userId: exactUser[0].id, username: exactUser[0].username};\r",
					"        pmInstance.test(\"Exact user found\", function () {\r",
					"            pmInstance.expect(exactUser[0].username).to.eql(value);\r",
					"        });\r",
					"        return user;\r",
					"    } else {\r",
					"        pmInstance.test(\"Exact user not found or multiple matches\", function () {\r",
					"            pmInstance.expect(exactUser.length).to.eql(1);\r",
					"        });\r",
					"        return undefined;\r",
					"    }\r",
					"};\r",
					"\r",
					"\r",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "FolderData",
			"value": ""
		}
	]
}