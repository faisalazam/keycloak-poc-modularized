include:
  - ../postgres/docker-compose.yml

services:
  # Service to generate realm-export.json files
  realm-setup:
    image: alpine:3.16
    container_name: realm-export-generator
    env_file:
      - ./.env
      - ../ldap/.env
      - ../mailhog/.env
      - ./../.env
    volumes:
      - ./realms:/tmp/realms
      - ./prepare_realm_exports.sh:/tmp/prepare_realm_exports.sh
      - keycloak_data:/shared  # Shared volume to transfer JSON file
    networks:
      - keycloak_network
    entrypoint:
      - /bin/sh
      - -c
      - |
        apk add --no-cache gettext jq && \
        # Run script to generate merged and populated realm export files
        chmod +x /tmp/prepare_realm_exports.sh && \
        /tmp/prepare_realm_exports.sh

  keycloak:
    image: quay.io/keycloak/keycloak:26.0
    container_name: keycloak
    env_file:
      - ./.env
    ports:
      - "${KEYCLOAK_PORT}:8080"
      - "${KEYCLOAK_MANAGEMENT_PORT}:9000" # Management Interface
    depends_on:
      realm-setup:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    volumes:
      - keycloak_data:/opt/keycloak/data/import
      # If the ../certs dir is missing, then run `../scripts/generate_certificate.sh` first to generate the certificates.
      - ../certs/certificate_authority/certificate_chains/root_and_intermediate_chain.bundle:/opt/keycloak/conf/certs/ldap_ca.crt:ro
    networks:
      - keycloak_network
    entrypoint:
      - sh
      - -c
      - |
        # KC_TRUSTSTORE_PATHS defines one or more custom CA certificates that Keycloak should trust.
        # These are useful when integrating Keycloak with external services (like LDAP, SMTP, or third-party identity providers)
        # that use TLS/SSL and are signed by a private or non-public certificate authority.
        #
        # Specify the full path(s) (comma-separated if multiple) to PEM-encoded `.crt` files, or the directory.
        # At runtime, Keycloak will automatically import these certificates into its internal truststore.
        if head -c 1 /opt/keycloak/conf/certs/ldap_ca.crt >/dev/null 2>&1; then
          export KC_TRUSTSTORE_PATHS=/opt/keycloak/conf/certs/ldap_ca.crt
          echo "KC_TRUSTSTORE_PATHS set to /opt/keycloak/conf/certs/ldap_ca.crt"
        else
          echo "Truststore cert not found, skipping KC_TRUSTSTORE_PATHS"
        fi
        exec /opt/keycloak/bin/kc.sh start-dev --import-realm
    healthcheck:
      test: >
        sh -c "
          exec 3<>/dev/tcp/127.0.0.1/9000 &&
          echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n' >&3 &&
          grep -q '\"status\": \"UP\"' <&3
        "
      interval: ${KEYCLOAK_HEALTHCHECK_INTERVAL:-30s}
      timeout: ${KEYCLOAK_HEALTHCHECK_TIMEOUT:-10s}
      retries: ${KEYCLOAK_HEALTHCHECK_RETRIES:-5} #ignore the intellij error

networks:
  keycloak_network:
    driver: bridge
    name: keycloak_network

volumes:
  keycloak_data:
