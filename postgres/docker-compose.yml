services:
  postgres:
    image: postgres:17.0
    container_name: ${KEYCLOAK_DB_HOST_NAME}
    env_file:
      - ./.env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_INTERNAL_PORT}" # 5432 already bound error - so using 5433 for now
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-10s}
      retries: ${HEALTHCHECK_RETRIES:-5} #ignore the intellij error
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - keycloak_network

  # To access the PostgreSQL database using pgAdmin
  pgadmin:
    image: dpage/pgadmin4:8.12
    container_name: ${PGADMIN_HOST_NAME}
    env_file:
      - ./.env
    ports:
      - "${PGADMIN_HTTP_PORT}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./init_pgadmin.sh:/init_pgadmin.sh
      - ./pgpass.template:/pgadmin4/pgpass.template
      - ./servers.json.template:/pgadmin4/servers.json.template # preconfigured servers/connections
    user: 'root' # TODO avoid using the root user and try to use the pgadmin user
    #    user: '5050:5050'  # Ensure that pgadmin runs as pgadmin user (UID 5050)
    entrypoint: >
      /bin/sh -c "
        echo 'Starting setup...';
        chmod +x /init_pgadmin.sh;

        # Run the init_pgadmin.sh script to configure pgAdmin
        /init_pgadmin.sh;

        cp -f /pgadmin4/pgpass /var/lib/pgadmin/;
        chmod 600 /var/lib/pgadmin/pgpass;
        # pgadmin user typically has a UID and GID of 5050
        chown 5050:5050 /var/lib/pgadmin/pgpass;

        # Ensure permissions on servers.json
        chmod 600 /pgadmin4/servers.json;
        chown 5050:5050 /pgadmin4/servers.json;

        # Run the original entrypoint
        /entrypoint.sh;
      "

    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - keycloak_network
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "80" ]
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-10s}
      retries: ${HEALTHCHECK_RETRIES:-5} #ignore the intellij error

networks:
  keycloak_network:
    driver: bridge  # Creates a new bridge network for this service
    name: keycloak_network  # This will match the name in the main compose file

volumes:
  pgadmin_data:
  postgres_data:
