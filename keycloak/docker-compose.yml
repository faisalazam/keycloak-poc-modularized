include:
  - ../ldap/docker-compose.yml
  - ../mailhog/docker-compose.yml
  - ../postgres/docker-compose.yml

services:
  # Service to generate realm-export.json files
  realm-setup:
    image: alpine:3.16
    container_name: realm-export-generator
    env_file:
      - ./.env
    volumes:
      - ./realms:/tmp/realms
      - ./prepare_realm_exports.sh:/tmp/prepare_realm_exports.sh
      - keycloak_data:/shared  # Shared volume to transfer JSON file
    networks:
      - keycloak_network
    entrypoint:
      - /bin/sh
      - -c
      - |
        apk add --no-cache gettext jq && \
        # Run script to generate merged and populated realm export files
        chmod +x /tmp/prepare_realm_exports.sh && \
        /tmp/prepare_realm_exports.sh

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    env_file:
      - ./.env
    ports:
      - "${KEYCLOAK_PORT}:8080"
#      - "9000:9000" # Management Interface
    depends_on:
      realm-setup:
        condition: service_started
      postgres:
        condition: service_healthy
      mailhog:
        condition: service_healthy
      openldap:
        condition: service_healthy
    volumes:
      - keycloak_data:/opt/keycloak/data/import
    networks:
      - keycloak_network
    command: [ "start-dev", "--import-realm" ]
    healthcheck:
      test: >
        sh -c "
          exec 3<>/dev/tcp/127.0.0.1/9000 &&
          echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n' >&3 &&
          grep -q '\"status\": \"UP\"' <&3
        "
      interval: ${KEYCLOAK_HEALTHCHECK_INTERVAL:-30s}
      timeout: ${KEYCLOAK_HEALTHCHECK_TIMEOUT:-10s}
      retries: ${KEYCLOAK_HEALTHCHECK_RETRIES:-5} #ignore the intellij error

networks:
  keycloak_network:
    driver: bridge  # Creates a new bridge network for this service
    name: keycloak_network  # This will match the name in the main compose file

volumes:
  keycloak_data:
